# ################################
# Model: wav2vec2 + DNN + CTC
# Augmentation: SpecAugment
# ################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1994
__set_seed: !apply:torch.manual_seed [!ref <seed>]
ewc_lambda_name: 10
ewc_lambda: 10.0

output_folder: !ref /gpfsstore/rech/nou/uzn19yk/results/efficient/librispeech/danish/libri_replay/ewc/<ewc_lambda_name>
wer_file: !ref <output_folder>/wer.txt
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt


# Data files
data_folder: /gpfsscratch/rech/nou/uzn19yk/Libri/LibriSpeech/ # e,g./path/to/LibriSpeech
# noise/ris dataset will automatically be downloaded
# data_folder_rirs: !ref <data_folder>
train_splits: ["train-clean-100"]
dev_splits: ["dev-clean"]
test_splits: ["test-clean", "test-other"]
skip_prep: False
ckpt_interval_minutes: 25 # save checkpoint every N min
libri_folder: /gpfsstore/rech/nou/uzn19yk/speechbrain/recipes/LibriSpeech/CTC/results/titouan_checkpoint/1986/
csv_folder:  /gpfsscratch/rech/nou/uzn19yk/danish/save_folder/
replay_train_csv: !ref <libri_folder>/train-clean-100.csv
replay_valid_csv: !ref <libri_folder>/dev-clean.csv
replay_test_csv: 
   - !ref <libri_folder>/test-clean.csv
train_dataset: !ref <csv_folder>/new_train.csv 
train_csv: !ref <csv_folder>/new_train.csv
valid_csv: !ref <csv_folder>/dev.csv
test_csv:
   - !ref <libri_folder>/test-clean.csv
   - !ref <csv_folder>/test.csv
   - /gpfsscratch/rech/nou/uzn19yk/download/cv-corpus-12.0-2022-12-07/danish_prep/test_cv.csv

augment: False



downsampling_rate: 16000

# Training parameters
number_of_epochs: 20
lr: 0.5
lr_wav2vec: 0.0001
sorting: ascending
auto_mix_prec: False
sample_rate: 16000

# With data_parallel batch_size is split into N jobs
# With DDP batch_size is multiplied by N jobs
# Must be 3 per GPU to fit 32GB of VRAM
batch_size: 6
test_batch_size: 4

# Dataloader options
train_dataloader_opts:
   batch_size: !ref <batch_size>

valid_dataloader_opts:
   batch_size: !ref <batch_size>

test_dataloader_opts:
   batch_size: !ref <test_batch_size>

# Model parameters
activation: !name:torch.nn.LeakyReLU
dnn_layers: 1
dnn_neurons: 1024
freeze_wav2vec: False

# Outputs
output_neurons: 37  # BPE size, index(blank/eos/bos) = 0
# Decoding parameters

#
# Functions and classes
#
epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
   limit: !ref <number_of_epochs>

augmentation: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
   sample_rate: !ref <sample_rate>
   speeds: [95, 100, 105]

enc: !new:speechbrain.lobes.models.VanillaNN.VanillaNN
   input_shape: [null, null, 768]
   activation: !ref <activation>
   dnn_blocks: !ref <dnn_layers>
   dnn_neurons: !ref <dnn_neurons>

teacher: !new:speechbrain.lobes.models.old_huggingface_wav2vec.HuggingFaceWav2Vec2
   source: /gpfsstore/rech/nou/uzn19yk/data2vec-audio-base/
   output_norm: True
   freeze_feature_extractor: True
   freeze: True
   save_path: !ref <save_folder>/wav2vec2_checkpoint
   output_all_hiddens: True

wav2vec2: !new:speechbrain.lobes.models.old_huggingface_wav2vec.HuggingFaceWav2Vec2
   source: /gpfsstore/rech/nou/uzn19yk/data2vec-audio-base/
   output_norm: True
   freeze_feature_extractor: False
   freeze: False
   save_path: !ref <save_folder>/wav2vec2_checkpoint

ctc_lin: !new:speechbrain.nnet.linear.Linear
   input_size: 1024
   n_neurons: !ref <output_neurons>

log_softmax: !new:speechbrain.nnet.activations.Softmax
   apply_log: True


augment_wavedrop: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
    sample_rate: !ref <sample_rate>
    speeds: [100]

# Definition of the augmentation pipeline.
# If concat_augment = False, the augmentation techniques are applied
# in sequence. If concat_augment = True, all the augmented signals
# # are concatenated in a single big batch.




ctc_cost: !name:speechbrain.nnet.losses.ctc_loss
   blank_index: !ref <blank_index>

ssl_loss: !name:speechbrain.nnet.losses.mse_loss

modules:
   wav2vec2: !ref <wav2vec2>
   enc: !ref <enc>
   ctc_lin: !ref <ctc_lin>
   teacher: !ref <teacher>
    
model: !new:torch.nn.ModuleList
   - [!ref <enc>, !ref <ctc_lin>]


model_opt_class: !name:torch.optim.Adadelta
   lr: !ref <lr>
   rho: 0.95
   eps: 1.e-8

wav2vec_opt_class: !name:torch.optim.Adam
   lr: !ref <lr_wav2vec>

lr_annealing_model: !new:speechbrain.nnet.schedulers.NewBobScheduler
   initial_value: !ref <lr>
   improvement_threshold: 0.0025
   annealing_factor: 0.8
   patient: 0

lr_annealing_wav2vec: !new:speechbrain.nnet.schedulers.NewBobScheduler
   initial_value: !ref <lr_wav2vec>
   improvement_threshold: 0.0025
   annealing_factor: 0.9
   patient: 0

label_encoder: !new:speechbrain.dataio.encoder.CTCTextEncoder

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
   checkpoints_dir: !ref <save_folder>
   recoverables:
      wav2vec2: !ref <wav2vec2>
      model: !ref <model>
      scheduler_model: !ref <lr_annealing_model>
      scheduler_wav2vec: !ref <lr_annealing_wav2vec>
      counter: !ref <epoch_counter>
      tokenizer: !ref <label_encoder>

blank_index: 0
unk_index: 1


train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
   save_file: !ref <train_log>

probe_log: !ref <output_folder>/probe_log.txt
probe_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
   save_file: !ref <probe_log>


error_rate_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats

cer_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats
   split_tokens: True
